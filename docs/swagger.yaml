definitions:
  request.Login:
    properties:
      email:
        example: sutter.wu@itforce-tech.com
        type: string
      password:
        example: 1234@Abcd
        type: string
    required:
    - email
    - password
    type: object
  request.Register:
    properties:
      avatar:
        example: ""
        type: string
      department_id:
        example: 1
        type: integer
      email:
        example: sutter.wu@itforce-tech.com
        type: string
      employ_date:
        example: "2025-09-05"
        type: string
      mobile:
        example: "13557080956"
        type: string
      name:
        example: Sutter
        type: string
      nick_name:
        example: Sutter
        type: string
      password:
        example: 1234@Abcd
        type: string
      position_id:
        example: 1
        type: integer
    required:
    - email
    - name
    - password
    type: object
  response.Response:
    properties:
      code:
        description: 业务码
        type: integer
      data:
        description: 数据
      msg:
        description: 提示消息
        type: string
    type: object
host: 127.0.0.1:9527
info:
  contact:
    email: wu_yiqiang@outlook.com
    name: sutter
  description: 基于Golang Gin框架的EAMS系统
  termsOfService: https://github.com/18211167516/Go-Gin-Api
  title: 基于Golang Gin框架的EAMS系统
  version: "1.0"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登陆
      operationId: /user/login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/request.Login'
              type: object
      summary: 用户登陆
      tags:
      - 用户管理
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      operationId: /user/register
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/request.Register'
              type: object
      summary: 用户注册
      tags:
      - 用户管理
securityDefinitions:
  Auth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
